name: Build and deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Nginx build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fuks-server-nginx:latest

  deploy:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Stop and run nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker container stop fuks-server-nginx
            docker rm fuks-server-nginx
            docker rmi fuks-server-nginx
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fuks-server-nginx
            
            mkdir -p /server/fuks-server/www/fuks.ru
            mkdir -p /server/fuks-server/www/blog-backend.fuks.ru
            mkdir -p /server/fuks-server/www/auth.fuks.ru
            mkdir -p /server/fuks-server/www/admin.fuks.ru
            mkdir -p /server/fuks-server/www/story.fuks.ru
            mkdir -p /server/fuks-server/www/docs.fuks.ru
            mkdir -p /server/fuks-server/www/esenin-family.ru
            mkdir -p /server/fuks-server/www/mail.fuks.ru

            docker run --name fuks-server-nginx \
            --rm -d \
            -v "/server/fuks-server/www":"/var/www" \
            -v "/server/fuks-server/letsencrypt":"/etc/letsencrypt" \
            --network="fuks-ru" \
            -p 443:443 -p 80:80 \
            difuks/fuks-server-nginx

  notification:
    name: Notification

    needs: [build, deploy]

    runs-on: ubuntu-latest

    if: always()

    steps:
      - name: Send telegram message
        uses: appleboy/telegram-action@master
        env:
          COMMIT_URL: ${{ github.server_url }}/${{ github.repository }}/commit/${{github.sha}}
          ACTION_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            Build *${{ needs.build.result == 'success' && '✅' || '⛔️' }}* Deploy *${{ needs.deploy.result == 'success' && '✅' || '⛔️' }}*
            
            *${{ github.actor }}* created [commit](${{ env.COMMIT_URL }})
            
            [Build and deploy](${{ env.ACTION_URL }})